@page "{recipeId?}/{message?}"
@model Recipes.Pages.MenuRecipes.EditModel
@{
    var isMessage = !string.IsNullOrEmpty(Model.Message);
}

<h1>@Model.FormTitle</h1>
@Html.AntiForgeryToken()
<form id="form" method="post">
    <input type="hidden" asp-for="Recipe.Id" />
    @if(isMessage)
    {
        <div class="alert alert-info">
            @Model.Message
        </div>
    }
    <div class="form-group">
        <label asp-for="Recipe.Name"></label>
        <input asp-for="Recipe.Name" class="form-control" />
        <span class="text-danger" asp-validation-for="Recipe.Name"></span>
        <br /><label asp-for="Recipe.CookTimeMinutes"></label>
        <input asp-for="Recipe.CookTimeMinutes" class="form-control" min="1" onkeypress="return ValidateWholeNumberEntered(event)" />
        <span class="text-danger" asp-validation-for="Recipe.CookTimeMinutes"></span>
        <br /><label asp-for="Recipe.Servings"></label>
        <input asp-for="Recipe.Servings" class="form-control" type="number" min="1" onkeypress="return ValidateWholeNumberEntered(event)" />
        <span class="text-danger" asp-validation-for="Recipe.Servings"></span>
        <table id="tableIngredients" class="table">
            <thead>
                <tr>
                    <th>Ingredients</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var ingredient in Model.Recipe.Ingredients)
                {
                    <tr>
                        <td>@ingredient</td>
                        <td>
                            <button class="btn btn-primary edit-button" data-id="@ingredient" data-listtoedit="IngredientsList">Edit</button>
                        </td>
                        <td>
                            <input class="btn btn-default" type="button" id="btnDeleteIngredient" value="Delete" onclick="DeleteIngredient(`@ingredient`)" />
                        </td>
                    </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td style="width:500px;">
                        <input type="text" id="IngredientToAdd" class="form-control" />
                    </td>
                    <td>
                        <input class="btn btn-default" type="button" id="btnAddIngredient" value="Add Ingredient" onclick="AddIngredient()" />
                        &nbsp;<span class="text-danger" id="IngredientToAddValidation"></span>
                    </td>
                </tr>
            </tfoot>
        </table>
        <table id="tableDirections" class="table">
            <thead>
                <tr>
                    <th>Directions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var direction in Model.Recipe.Directions)
                {
                <tr>
                    <td>@direction</td>
                    <td>
                        <button class="btn btn-primary edit-button" data-id="@direction" data-listtoedit="DirectionsList">Edit</button>
                    </td>
                    <td>
                        <input class="btn btn-default" type="button" id="btnDeleteDirection" value="Delete" onclick="DeleteDirection(`@direction`)" />
                    </td>
                </tr>
                }
            </tbody>
            <tfoot>
                <tr>
                    <td style="width:500px;">
                        <input type="text" id="DirectionToAdd" class="form-control" />
                    </td>
                    <td>
                        <input class="btn btn-default" type="button" id="btnAddDirection" value="Add Direction" onclick="AddDirection()" />
                        &nbsp;<span class="text-danger" id="DirectionToAddValidation"></span>
                    </td>
                </tr>
            </tfoot>
        </table>
        <select id="CategoryId" name="CategoryId" asp-for="Recipe.CategoryId" asp-items="Model.Categories"></select>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</form>


<a asp-page="./List" class="btn btn-default">All Recipes</a>

@section Scripts{
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
<script type="text/javascript">

    $(document).ready(function () {
        $('#tableIngredients').DataTable();
        $('#tableDirections').DataTable();
    });

    function ValidateWholeNumberEntered(event) {
        return event.charCode >= 48 && event.charCode <= 57;
    }

    function UndoUpdateList() {
        location.href = "";
    }

    function ListItemValidation(itemName) {
        if ($("#" + itemName + "ToAdd").val().length === 0) {
            $("#" + itemName + "ToAddValidation").html("Enter " + itemName + " to add.");
            return false;
        } else {
            $("#" + itemName + "ToAddValidation").html("");
            return true;
        }

        return isValidEntry;
    }

    function ValidateAddIngredient() {
        let isValidEntry = true;

        $("#DirectionToAddValidation").html("");

        isValidEntry = ListItemValidation("Ingredient");
       

        if ($("#Recipe_Name").val().length === 0) {
            // alert("The name filed is required.");
            $('[data-valmsg-for="Recipe.Name"]').html("The Name field is required.");

            isValidEntry = false;
        }

        return isValidEntry;
    }

    function ValidateAddDirection() {
        let isValidEntry = true;

        $("#IngredientToAddValidation").html("");

        isValidEntry = ListItemValidation("Direction");

     

        if ($("#Recipe_Name").val().length === 0) {
            $('[data-valmsg-for="Recipe.Name"]').html("The Name field is required.");

            isValidEntry = false;
        }

        return isValidEntry;
    }

    
    function AddIngredient() {
        if(ValidateAddIngredient()) {
            let ingredientToAdd = $("#IngredientToAdd").val();
            let recipeName = $("#Recipe_Name").val();

            $.ajax({
                type: "GET",
                data: { recipeId: `@Model.Recipe.Id`, ingredientToAdd: ingredientToAdd, recipeNameToAdd: recipeName },
                contentType: "application/json; charset=utf-8",
                url: '@Url.Page("Edit","AddIngredient")',
             success: function (result) {
                   location.href = "/MenuRecipes/Edit/" + result.recipeId + "/" + result.message;
                }
            });
        }
    }

   function DeleteIngredient(item) {
         $.ajax({
                type: "GET",
                data: { recipeId: `@Model.Recipe.Id`, item: item },
                contentType: "application/json; charset=utf-8",
                url: '@Url.Page("Edit","DeleteIngredient")',
             success: function (result) {
                   location.href = "/MenuRecipes/Edit/@Model.Recipe.Id/" + result;
                }
            });
    }

    function AddDirection() {

        if (ValidateAddDirection()) {
            let directionToAdd = $("#DirectionToAdd").val();
            let recipeName = $("#Recipe_Name").val();

            $.ajax({
                    type: "GET",
                 data: { recipeId: `@Model.Recipe.Id`, directionToAdd: directionToAdd, recipeNameToAdd: recipeName },
                    contentType: "application/json; charset=utf-8",
                    url: '@Url.Page("Edit","AddDirection")',
                 success: function (result) {
                     location.href = "/MenuRecipes/Edit/" + result.recipeId + "/" + result.message;
                    }

             });
        }
    }

      function DeleteDirection(item) {
         $.ajax({
                type: "GET",
                data: { recipeId: `@Model.Recipe.Id`, item: item },
                contentType: "application/json; charset=utf-8",
                url: '@Url.Page("Edit","DeleteDirection")',
             success: function (result) {
                   location.href = "/MenuRecipes/Edit/@Model.Recipe.Id/" + result;
                }
            });
    }

    $('.edit-button').click(function (e) {
        e.preventDefault();


        let id = this.dataset.id;
        let listtoedit = this.dataset.listtoedit;
    
        let inputNames = listtoedit === "IngredientsList" ? ["Ingredients"] : ["Directions"];

        $(this).closest('tr').find('td').each(function (index, value) {
            if (index === 0) {
                let text = $(value).text().trim();
                let name = inputNames[index];
                $(value).append('<input type="text" name="' + name + '" id="' + name + '" class="form-control" value="' + text + '" />');
                $(value).find('span').remove();
            }
            else if(index === 1) {
                $(value).find('button').remove();
                $(value).append('<input type="submit" value="Save" name="Save" class="btn btn-primary" />');
                $(value).append('&nbsp;<input type="button" value="Cancel" onclick="UndoUpdateList();" name="Cancel" class="btn btn-primary" />');


                if (listtoedit === "IngredientsList") {
                    $(value).append('<input type="hidden" name="IngredientOriginal" value="' + id + '" />');
                } else {
                    $(value).append('<input type="hidden" name="DirectionOriginal" value="' + id + '" />');
                }

            }
        })
    })
</script>
}
